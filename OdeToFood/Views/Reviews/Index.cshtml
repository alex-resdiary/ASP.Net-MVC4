@model IEnumerable<OdeToFood.Models.RestaurantReview>

@{
    ViewBag.Title = "Index";
    var firstReview = Model.First(); //can declare variables  in block of code
}

@* Razor accepts C# code blocks as long as you start them as above with an @{ and ends in a } *@

<h2>The Latest Reviews</h2>
@firstReview.Name
<br>

We are showing the latest @Model.Count() reviews
<br>
@VirtualPath  <!–– path of the view  ––>
<br>
<br>

@foreach(var item in Model)
{
    <div class="review">
        <h4>@item.Name</h4>
        <span>@item.Rating </span>
   @for(int i = 0; i < item.Rating; i++)
   {
       @: * 
   }
        <p>@item.City, @item.Country</p>

    </div>
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
                <!--// @*@Html.Raw(item.City)*@ executable script that does encode text as html script - can cause XSS attacks -->
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.Rating)  *@
                @item.Rating /20 @* Implicit code expression or use () to use explicit  code expression and it will read code as C# code *@
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
